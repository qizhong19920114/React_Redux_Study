//The final index.html file; I am going to use boilderplate for other project now

<!DOCTYPE html>
<html lang="en`">
<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <title>React - Tutorial</title>
    <link rel ="stylesheet" type="text/css" href="../../css/main.css">
    <script src="../../js/react.min.js"></script>
    <script src="../../js/react-dom.min.js"></script>
    <script src="../../js/browser.min.js"></script>
</head>
<body>

    <div id="container"></div>

    <script type="text/babel">

        var Comment = React.createClass({



            getInitialState: function() {
                return {editing: false}
            },

            edit: function() {
                this.setState({editing: true});
            },
            save: function() {
                var val = this.refs.newText.value;
                console.log("new comments" + val);
                this.props.updateCommentText(val,this.props.index);
                this.setState({editing: false});
            },
            remove: function() {
                alert('Removing comment');
                this.props.deleteFromBoard(this.props.index);
            },

            renderNormal: function (){
                return (
                    <div className = "commentContainer">
                        <div className="commentText">{this.props.children}</div>
                        <button onClick={this.edit} className="button-primary">Edit</button>
                        <button onClick={this.remove} className="button-danger">Remove</button>
                    </div>
                );
            },

            renderForm: function() {
                return (
                    <div className = "commentContainer">
                        <textarea ref="newText" defaultValue={this.props.children}></textarea>
                        <button onClick={this.save} className="button-success">Save</button>
                    </div>
                );
            },

            render: function () {
                if(this.state.editing){
                    return this.renderForm();
                }
                else{
                    return this.renderNormal();
                }
            }



        });


        var Board = React.createClass({
            getInitialState: function(){

                return {
                    comments: []
                }
            },

            add: function(text) {
                var arr = this.state.comments;
                arr.push(text);
                this.setState({comments: arr});
            },

            removeComment: function (i) {
                console.log('Removing comment:' + i);
                var arr = this.state.comments; 
                arr.splice(i, 1);
                this.setState({comments: arr});
            },


            updateComment: function(newText, i){
                console.log('Updating comment');
                var arr = this.state.comments;
                arr[i] = newText;
                this.setState({comments: arr});
            },

            //use map to apply function to the array
            //text is the content, i is the index
            // we use key so we can reference the content in the future
            //the reason use index is that key is for the react itself so index 
            //is for programmer to use
            //use property to pass in the update comment function
            //When you use the component in react you can add properties to it from 
            //the parent component and you can use those properties in the component 

            eachComment: function(text, i){
                return (
                        <Comment key={i} index={i} updateCommentText={this.updateComment} deleteFromBoard={this.removeComment}>
                            {text}
                        </Comment>
                        );
            },


            render: function () {
                return (
                    <div>
                        <button onClick={this.add.bind(null, 'Default text')} className="button-info create">Add New</button>
                        <div className = "board">
                            {
                                
                                this.state.comments.map(this.eachComment)
                            }
                        </div>
                    </div>
                );
            }

        });

        ReactDOM.render(<Board/>,
            document.getElementById('container')
        );

    </script>

</body>
</html>



<!-- you make component make sure you only use one div (or one parent component) --> 
